package ru.peak.ml.apdk.app.service.apdk;

import ru.peak.ml.apdk.app.service.formatter.MessageFormatter;
import ru.peak.ml.apdk.app.service.formatter.SaleFormatter;
import ru.peak.ml.terminalexchange.message.ResponseMessage;

import javax.xml.bind.DatatypeConverter;

/**
 *
 */
public class Sale extends CommonApdkMessage {

    def ORIGINAL_DATA = [2, -117, 0, 0, 1, 0, 7, 1, 8, 0, 57, 57, 55, 55, 53, 53, 51, 51, 2, 4, 0, 50, 50, 52, 52, 3, 27, 0, 4, 69, -54, -126, -107, -13, -118, 42, -108, -4, 4, -76, -96, 110, -42, -104, 25, 106, -53, 112, -31, 51, 0, 92, 57, 60, -44, 4, 3, 0, 54, 52, 51, 5, 14, 0, 50, 48, 49, 53, 48, 52, 50, 49, 49, 55, 49, 49, 50, 50, 6, 6, 0, 49, 49, 54, 48, 49, 52, 7, 10, 0, 49, 48, 48, 48, 48, 48, 48, 48, 48, 49, 16, 1, 0, 49, 17, 6, 0, 49, 49, 54, 48, 48, 49, 18, 3, 0, 16, 0, 1, 19, 3, 0, 16, 0, 1, 23, 4, 0, 49, 50, 48, 48, 25, 1, 0, 49, 100, 3, 0, 48, 48, 48, -48, -27] as byte[];
    def ORIGINAL_DATA_1 = [2, -107, 0, 0, 1, 0, 7, 1, 8, 0, 49, 48, 48, 48, 48, 48, 49, 56, 2, 4, 0, 49, 50, 51, 52, 3, 27, 0, 4, 69, -54, -126, -107, -13, -118, 42, -108, -4, 4, -76, -96, 110, -42, -104, 25, 106, -53, 112, -31, 51, 0, 92, 57, 60, -44, 4, 3, 0, 54, 52, 51, 5, 14, 0, 50, 48, 49, 53, 48, 52, 50, 49, 49, 55, 49, 49, 50, 50, 6, 8, 0, 51, 48, 49, 48, 49, 48, 49, 48, 7, 12, 0, 49, 48, 48, 48, 48, 48, 48, 48, 57, 56, 51, 55, 16, 1, 0, 48, 17, 6, 0, 49, 49, 54, 48, 48, 49, 18, 3, 0, 50, 48, 81, 19, 3, 0, 0, 0, 24, 23, 4, 0, 49, 50, 48, 48, 45, 3, 0, 49, 50, 48, 25, 1, 0, 49, 100, 3, 0, 48, 48, 48, 93, -82] as byte[];
    def ORIGINAL_DATA_2 = [2, -107, 0, 0, 1, 0, 7, 1, 8, 0, 49, 48, 48, 48, 48, 48, 49, 56, 2, 4, 0, 49, 50, 51, 52, 3, 27, 0, 4, 69, -54, -126, -107, -13, -118, 42, -108, -4, 4, -76, -96, 110, -42, -104, 25, 106, -53, 112, -31, 51, 0, 92, 57, 60, -44, 4, 3, 0, 54, 52, 51, 5, 14, 0, 50, 48, 49, 53, 48, 52, 50, 49, 49, 55, 49, 49, 50, 50, 6, 8, 0, 51, 48, 49, 48, 49, 48, 49, 48, 7, 12, 0, 49, 48, 48, 48, 48, 48, 48, 48, 57, 56, 51, 56, 16, 1, 0, 48, 17, 6, 0, 49, 49, 54, 48, 48, 49, 18, 3, 0, 50, 48, 81, 19, 3, 0, 0, 0, 25, 23, 4, 0, 49, 50, 48, 48, 45, 3, 0, 49, 50, 48, 25, 1, 0, 49, 100, 3, 0, 48, 48, 48, 82, -114] as byte[];
    def ORIGINAL_DATA_3 = [2, -107, 0, 0, 1, 0, 7, 1, 8, 0, 49, 48, 48, 48, 48, 48, 49, 56, 2, 4, 0, 49, 50, 51, 52, 3, 27, 0, 4, 69, -54, -126, -107, -13, -118, 42, -108, -4, 4, -76, -96, 110, -42, -104, 25, 106, -53, 112, -31, 51, 0, 92, 57, 60, -44, 4, 3, 0, 54, 52, 51, 5, 14, 0, 50, 48, 49, 53, 48, 52, 50, 49, 49, 55, 49, 49, 50, 50, 6, 8, 0, 51, 48, 49, 48, 49, 48, 49, 48, 7, 12, 0, 49, 48, 48, 48, 48, 48, 48, 48, 57, 56, 53, 55, 16, 1, 0, 48, 17, 6, 0, 49, 49, 54, 48, 48, 49, 18, 3, 0, 50, 48, 81, 19, 3, 0, 0, 0, 31, 23, 4, 0, 49, 48, 48, 48, 45, 3, 0, 49, 48, 48, 25, 1, 0, 49, 100, 3, 0, 48, 48, 48, -79, -118] as byte[];
    def ORIGINAL_DATA_4 = [2, -107, 0, 0, 1, 0, 7, 1, 8, 0, 49, 48, 48, 48, 48, 48, 49, 56, 2, 4, 0, 49, 50, 51, 52, 3, 27, 0, 4, 69, -54, -126, -107, -13, -118, 42, -108, -4, 4, -76, -96, 110, -42, -104, 25, 106, -53, 112, -31, 51, 0, 92, 57, 60, -44, 4, 3, 0, 54, 52, 51, 5, 14, 0, 50, 48, 49, 53, 48, 52, 50, 49, 49, 55, 49, 49, 50, 50, 6, 8, 0, 51, 48, 49, 48, 49, 48, 49, 48, 7, 12, 0, 49, 48, 48, 48, 48, 48, 48, 48, 57, 56, 57, 50, 16, 1, 0, 48, 17, 6, 0, 49, 49, 54, 48, 48, 49, 18, 3, 0, 50, 48, 81, 19, 3, 0, 0, 0, 33, 23, 4, 0, 49, 50, 48, 48, 45, 3, 0, 49, 50, 48, 25, 1, 0, 49, 100, 3, 0, 48, 48, 48, 96, -25] as byte[];
    def ORIGINAL_DATA_5 = [2, -107, 0, 0, 1, 0, 7, 1, 8, 0, 49, 48, 48, 48, 48, 48, 49, 56, 2, 4, 0, 49, 50, 51, 52, 3, 27, 0, 4, 69, -54, -126, -107, -13, -118, 42, -108, -4, 4, -76, -96, 110, -42, -104, 25, 106, -53, 112, -31, 51, 0, 92, 57, 60, -44, 4, 3, 0, 54, 52, 51, 5, 14, 0, 50, 48, 49, 53, 48, 52, 50, 49, 49, 55, 49, 49, 50, 50, 6, 8, 0, 51, 48, 49, 48, 49, 48, 49, 48, 7, 12, 0, 49, 48, 48, 48, 48, 48, 48, 48, 57, 56, 57, 51, 16, 1, 0, 48, 17, 6, 0, 49, 49, 54, 48, 48, 49, 18, 3, 0, 50, 48, 81, 19, 3, 0, 0, 0, 34, 23, 4, 0, 49, 50, 48, 48, 45, 3, 0, 49, 50, 48, 25, 1, 0, 49, 100, 3, 0, 48, 48, 48, 39, 16] as byte[];
    def ORIGINAL_DATA_6 = [2, -107, 0, 0, 1, 0, 7, 1, 8, 0, 49, 48, 48, 48, 48, 48, 49, 56, 2, 4, 0, 49, 50, 51, 52, 3, 27, 0, 4, 69, -54, -126, -107, -13, -118, 42, -108, -4, 4, -76, -96, 110, -42, -104, 25, 106, -53, 112, -31, 51, 0, 92, 57, 60, -44, 4, 3, 0, 54, 52, 51, 5, 14, 0, 50, 48, 49, 53, 48, 53, 50, 48, 49, 52, 48, 56, 48, 51, 6, 8, 0, 51, 48, 49, 48, 49, 48, 49, 48, 7, 12, 0, 49, 48, 48, 48, 48, 48, 48, 48, 57, 56, 57, 52, 16, 1, 0, 48, 17, 6, 0, 49, 49, 54, 48, 48, 49, 18, 3, 0, 50, 48, 81, 19, 3, 0, 0, 0, 35, 23, 4, 0, 49, 50, 48, 48, 45, 3, 0, 49, 50, 48, 25, 1, 0, 49, 100, 3, 0, 48, 48, 48, 11, 42] as byte[];
    def ORIGINAL_DATA_7 = [2, -107, 0, 0, 1, 0, 7, 1, 8, 0, 49, 48, 48, 48, 48, 48, 49, 56, 2, 4, 0, 49, 50, 51, 52, 3, 27, 0, 4, 69, -54, -126, -107, -13, -118, 42, -108, -4, 4, -76, -96, 110, -42, -104, 25, 106, -53, 112, -31, 51, 0, 92, 57, 60, -44, 4, 3, 0, 54, 52, 51, 5, 14, 0, 50, 48, 49, 53, 48, 53, 50, 54, 49, 54, 51, 48, 48, 52, 6, 8, 0, 51, 48, 49, 48, 49, 48, 49, 48, 7, 12, 0, 49, 48, 48, 48, 48, 48, 48, 49, 48, 48, 48, 51, 16, 1, 0, 48, 17, 6, 0, 49, 49, 54, 48, 48, 49, 18, 3, 0, 50, 48, 81, 19, 3, 0, 0, 0, 71, 23, 4, 0, 49, 50, 48, 48, 45, 3, 0, 49, 50, 48, 25, 1, 0, 49, 100, 3, 0, 48, 48, 48, -123, 10] as byte[];
    def ORIGINAL_DATA_8 = [2, -107, 0, 0, 1, 0, 7, 1, 8, 0, 49, 48, 48, 48, 48, 48, 49, 56, 2, 4, 0, 49, 50, 51, 52, 3, 27, 0, 4, 69, -54, -126, -107, -13, -118, 42, -108, -4, 4, -76, -96, 110, -42, -104, 25, 106, -53, 112, -31, 51, 0, 92, 57, 60, -44, 4, 3, 0, 54, 52, 51, 5, 14, 0, 50, 48, 49, 53, 48, 52, 50, 49, 49, 55, 49, 49, 50, 50, 6, 8, 0, 51, 48, 49, 48, 49, 48, 49, 48, 7, 12, 0, 49, 48, 48, 48, 48, 48, 48, 49, 48, 48, 49, 53, 16, 1, 0, 48, 17, 6, 0, 49, 49, 54, 48, 48, 49, 18, 3, 0, 50, 48, 81, 19, 3, 0, 0, 0, 81, 23, 4, 0, 49, 50, 48, 48, 45, 3, 0, 49, 50, 48, 25, 1, 0, 49, 100, 3, 0, 48, 48, 48, -55, -39] as byte[];
    def ORIGINAL_DATA_9 = [2, -107, 0, 0, 1, 0, 7, 1, 8, 0, 49, 48, 48, 48, 48, 48, 49, 56, 2, 4, 0, 49, 50, 51, 52, 3, 27, 0, 4, 69, -54, -126, -107, -13, -118, 42, -108, -4, 4, -76, -96, 110, -42, -104, 25, 106, -53, 112, -31, 51, 0, 92, 57, 60, -44, 4, 3, 0, 54, 52, 51, 5, 14, 0, 50, 48, 49, 53, 48, 53, 50, 55, 49, 52, 53, 49, 50, 50, 6, 8, 0, 51, 48, 49, 48, 49, 48, 49, 48, 7, 12, 0, 49, 48, 48, 48, 48, 48, 48, 49, 48, 48, 49, 57, 16, 1, 0, 48, 17, 6, 0, 49, 49, 54, 48, 48, 49, 18, 3, 0, 50, 48, 81, 19, 3, 0, 0, 0, 83, 23, 4, 0, 49, 50, 48, 48, 45, 3, 0, 49, 50, 48, 25, 1, 0, 49, 100, 3, 0, 48, 48, 48, 73, -12] as byte[];
    def ORIGINAL_DATA_10 = [2, -89, 0, 23, 4, 0, 49, 53, 48, 48, 16, 1, 0, 48, 0, 1, 0, 7, 1, 8, 0, 49, 48, 48, 48, 48, 48, 49, 55, 2, 8, 0, 50, 48, 48, 48, 48, 48, 49, 55, 3, 27, 0, 4, 69, -54, -126, -107, -13, -118, 42, -108, -4, 4, -76, -96, 110, -42, -104, 25, 106, -53, 112, -31, 51, 0, 92, 57, 60, -44, 4, 3, 0, 54, 52, 51, 5, 14, 0, 50, 48, 49, 53, 48, 55, 48, 56, 48, 51, 51, 53, 49, 57, 6, 8, 0, 51, 48, 49, 48, 49, 48, 49, 48, 17, 6, 0, 49, 49, 54, 48, 48, 49, 18, 3, 0, 48, 0, 1, 19, 3, 0, 0, 0, 1, 25, 1, 0, 49, 13, 14, 0, 50, 48, 49, 53, 48, 55, 48, 56, 48, 51, 51, 53, 49, 57, 100, 3, 0, 48, 48, 48, 15, 3, 0, 49, 53, 48, 45, 3, 0, 49, 53, 48, 14, 3, 0, 49, 53, 48, 30, 26] as byte[];

    def OPERATION_TYPE = new String([49] as byte[]);

    def formatter = new SaleFormatter();

    String cardHash;
    String date;
    String paymentMethod;
    String referenceNumber;
    String operationNumber;
    String sum;
    String loyaltySum;

    public Sale(String serverAddress, int serverPort) {
        super(serverAddress, serverPort);
    }

    public byte[] getData() {
        getNewApdkMessage().toArray();
    }

    public ResponseMessage getNewApdkMessage() {
        def message = super.getNewApdkMessage();
        message.setCardIdentifier(DatatypeConverter.parseHexBinary(getCardHash()));
        message.setOperationTimestamp(getDate());
        message.setReferenceNumber(getReferenceNumber());
        message.setPaymentMethod(getPaymentMethod());
        message.setOperationNumber(getOperationNumber());
        message.setSum(getSum());
        message.setRewardSum(getLoyaltySum());
        message.setOperationType(OPERATION_TYPE);

        return message;
    }

    @Override
    public MessageFormatter getFormatter() {
        formatter;
    }

    @Override
    public String getOperationCaption() {
        "Продажа";
    }

}
